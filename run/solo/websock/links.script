# -*-bash-*-
# this file creates all links to files in the data directory needed for
# running the application on a specific machine.

# standard folder with project-wide data
DATADIR=$(realpath ../../run-data)

# python helper script
ln -sf $DATADIR/which_dueca_gtk.py .

# example for project-wide configuration (.cnf) files
# ln -sf $DATADIR/*.cnf .

# create a folder for run log history
if [ ! -d runlogs ]; then
   mkdir runlogs
fi

# convenience link to executable (cmake or legacy)
if [ -d ../../../build ]; then
   ln -sf ../../../build/dueca_run.x .
else
   ln -sf ../../../dueca_run.x .
fi

# create a run script, if desired set to 1
RUNSCRIPT=1

# files you want kept with the run results, e.g. logs
MOVEFILES="recording*.ddff initial*.toml"
# files you want copies with the run results, e.g. config file
COPYFILES="dueca_mod.py"

# create the runscript if it does not yet exist
if [ \! -x runscript -a ${RUNSCRIPT} = "1" ]; then
    cat >runscript <<EOF
#!/usr/bin/bash

# Store the previous run's files
dueca-archivelogfiles "$MOVEFILES" "$COPYFILES"

# start websocket tester program
python3 websockreflect.py &

# start the DUECA executable
./dueca_run.x  > >(tee normal.log) 2> >(tee error.log >&2)
EOF
    chmod +x runscript
fi

# active only on node 0, when a start file is found, link the start
# file to a start script folder (default ${HOME}/scripts)
dueca-startlink --scriptdir=${HOME}/scripts

ln -sf ${DATADIR}/websockreflect.py .